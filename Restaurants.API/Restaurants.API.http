@RestaurantsAPI_HostAddress = http://localhost:5293
@token = CfDJ8Orz0xJooX9Gs0tdWTa0mcy-gs6bEOL7Gl_oGisOIiugNROxcPZmEiV7j97xhW6H4Cu2iEXt4mCLb7P8Gj7Z2cvIPhpxO6jt_5q9YSM5dibcAH5Ni2snrIrh8wScuSQ9Gq_o4f_2I2rTWWZxyEvkSC6Hd3dXf7F9NhowJJN_8vxOUdjS9aB_csvbI3tU804LpvJjCr2-Pt3rcTRGId9PBEbujDQHqmmIAkw799TRvr5vPt1waUOpHWJTPHw-9kWVsXiI_yStGjhvtx_a2VJhwJyLMAkl-VDzaiDLvSMV0eosIYi5HkJ_bOb0G4cALude_coTCg5n5ZxNFibk1VGEoPAq5bOJcRt5uN463i2Kmjj4uWRa_aqEJcJvgJ9_WIKfnHIK7g3CXSL7QbayN6dWy_cc0r4IHsS2qqcW7XNyzDuOokVBGx15Fb-GEFe6WvqDfMO-aPNp2399eNDBqoeaXMmV1e3wzxjPZj5ji92QKEoRjzL3Ac7vpBE8bYVcNGja3F2wzKZPYCnA_GKXxk0UIWvHMth_jeYz8FjEOc-EUFcsRxiVlNqQrzwTV_RsgKd_0D7Yv0txMoQXTgIp85Fho_Y_lwqUsXRQS4s_R1zPAxWwoWvud7g0xGnAaatDiVYIkqwrVVcHIdI-EuFNnkBTEom8rQ_ZIyZL9lNtWfW_Y-2iJqGhcTeMquNAyLbO-Gc2ykDJDw0VlLacM45FzXjURkTK9RDIqaquc_5xGF_qBO13q8K8N9Wxx21wISZKSRJr_XHlvpgUn8Chq627Yqa1Uwgwf6hvHJtN9nc5asNOobdu_xG0OWht63zaB8hiRvoNhrDQUDh_DifyBVqBCisxHREyLQJzrDKSwmilB4XuXyh6CczRp9WCbL2BOKH8G2Fymw

GET {{RestaurantsAPI_HostAddress}}/api/restaurants
Accept: application/json
#Authorization: Bearer {{token}}

###

GET {{RestaurantsAPI_HostAddress}}/api/restaurants/18edc686-fa59-4e53-96cc-cf1be934464a
Accept: application/json
Authorization: Bearer {{token}}

###

POST {{RestaurantsAPI_HostAddress}}/api/restaurants
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "City Wok",
  "description": "The world's best Chinese food",
  "category": "Chinese",
  "hasDelivery": true,
  "contactEmail": "bruce.lee@chinese-spy.com",
  "contactNumber": "123-456-7890",
  "city": "South Park",
  "street": "Main Street",
  "postalCode": "22-333"
}

###

DELETE {{RestaurantsAPI_HostAddress}}/api/restaurants/97ca1637-93ea-4b1c-85dd-91e2a253fa3d
Accept: application/json

###

PATCH {{RestaurantsAPI_HostAddress}}/api/restaurants
Content-Type: application/json

{
  "id": "97ca1637-93ea-4b1c-85dd-91e2a253fa3d",
  "name": "City Sushi 1",
  "description": "The most authentic Japanese cuisine in the region",
  "hasDelivery": true
}

###

GET {{RestaurantsAPI_HostAddress}}/api/restaurants/3af987b0-e8ca-4293-ebc5-08dcea06ac45/dishes
Accept: application/json
Authorization: Bearer {{token}}

###

GET {{RestaurantsAPI_HostAddress}}/api/restaurants/3af987b0-e8ca-4293-ebc5-08dcea06ac45/dishes/c4c23fee-61d9-418d-ad02-08dcea06ac4d
Accept: application/json
Authorization: Bearer {{token}}

###

POST {{RestaurantsAPI_HostAddress}}/api/restaurants/3af987b0-e8ca-4293-ebc5-08dcea06ac45/dishes
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "Chicken Kadai",
  "description": "A spicy chicken delicacy",
  "price": 24.99,
  "kiloCalories": 520
}

###

PATCH {{RestaurantsAPI_HostAddress}}/api/restaurants/54a3718d-9cb5-48e1-81f3-c29673125bcb/dishes/
Content-Type: application/json

{
  "id": "AAFCCE92-4E96-48F8-A1C8-0C92C344241F",
  "name": "Chicken Kadai",
  "description": "Yet another disgusting indian dish with low nutritional value and high calories",
  "price": 49.99,
  "kiloCalories": 600
}

###

DELETE {{RestaurantsAPI_HostAddress}}/api/restaurants/54a3718d-9cb5-48e1-81f3-c29673125bcb/dishes/aafcce92-4e96-48f8-a1c8-0c92c344241f
Accept: application/json

###

POST {{RestaurantsAPI_HostAddress}}/api/identity/register
Content-Type: application/json

{
  "email": "owner@example.com",
  "password": "Hello@1234"
}

###

POST {{RestaurantsAPI_HostAddress}}/api/identity/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "Hello@1234"
}

###

PATCH {{RestaurantsAPI_HostAddress}}/api/identity/user
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "dateOfBirth": "2010-11-23",
  "nationality": "GER"
}

###

POST {{RestaurantsAPI_HostAddress}}/api/identity/userRole
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "userEmail": "owner@example.com",
  "roleName": "Owner"
}

###

DELETE {{RestaurantsAPI_HostAddress}}/api/identity/userRole
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "userEmail": "john.doe@example.com",
  "roleName": "Owner"
}