@RestaurantsAPI_HostAddress = http://localhost:5293
@token = CfDJ8Orz0xJooX9Gs0tdWTa0mcyg7BJEk0RE8DLnCJ6J_FuDNMashvkPT1W0nk27oHKCEQuroYQocxoY23XN8Srrf0kivHpREmumvkgWEJpELbx0g4ZzHsmNZ6bCvX078J73HdBJ-183NpXEfXVvbOyXjDz_hyfY83-DInzgDcpi_pjsLJtuRcNbuhSyPQp6LvMHcKsRgXdEN8-lNhgD_tV-RWp4pRy6yG3Sa4VHsxo_Gk8Tdj_0KhuInSNjJBgkZGOYmjBVpzWb-aGupUBKNbKQFgCTqYdhEgXce70-oRg9kB7PhVDuSqR0Y7WkTT1EbOov-Q6It9-Cj5fJU9RwpYtMLncpqh77exoLMyO-jEhQhcDY7p2aPmCzLMgX7kKQNfMWJWkGejx1rRn_xi-FKLTl1SHXCdNaq1Gk7pE9spJVkSC0GmfbyFmJI1SArfayCZvlX4w4bwc7XUCmu9KRIDREuEqnjc6ND-CjmB5FmfI5p2leEIt86Vn-JerUQ1H_0aGw9pA5RZ-1Ypgi6Dm3Df3eRVfYbJ-cbJHrDxmq1R_ick0OKxVFxAxE2ZC1B6OJA8WRszzUIQF6sWCzwJcdkvfyQOlrgcyDv7zhgd8mXjIkR0b_WuoBWDpwxBu_biqudaQeK_Wl5ppPrkZK8VBWAKMFvArYTIVqARxKwb9tyO9xpM1XxJweDqfPQ6JxorTBs3PWHlN9W9xjwDx6WTbsLpgllyq-py9qUWok2TKLo2x5qXkFVZo0TENgd09_BYpPuXN4x4bPIFFhiU2D70LiV36gefhCDyLtQjBhFstGaXbVDem6k50DCw4Hs2KW_hVKgxZ9XygUMbTQlLVRh7jKRoRla2bLaZqeZEhbxuGZEjLt1Y0KlQ_-7ctVWDftHX5jhKLonQ

GET {{RestaurantsAPI_HostAddress}}/api/restaurants
Accept: application/json
#Authorization: Bearer {{token}}

###

GET {{RestaurantsAPI_HostAddress}}/api/restaurants/18edc686-fa59-4e53-96cc-cf1be934464a
Accept: application/json
Authorization: Bearer {{token}}

###

POST {{RestaurantsAPI_HostAddress}}/api/restaurants
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "Owner Restaurant",
  "description": "The world's best Chinese food",
  "category": "Chinese",
  "hasDelivery": true,
  "contactEmail": "bruce.lee@chinese-spy.com",
  "contactNumber": "123-456-7890",
  "city": "South Park",
  "street": "Main Street",
  "postalCode": "22-333"
}

###

DELETE {{RestaurantsAPI_HostAddress}}/api/restaurants/97ca1637-93ea-4b1c-85dd-91e2a253fa3d
Accept: application/json

###

PATCH {{RestaurantsAPI_HostAddress}}/api/restaurants
Content-Type: application/json

{
  "id": "97ca1637-93ea-4b1c-85dd-91e2a253fa3d",
  "name": "City Sushi 1",
  "description": "The most authentic Japanese cuisine in the region",
  "hasDelivery": true
}

###

GET {{RestaurantsAPI_HostAddress}}/api/restaurants/3af987b0-e8ca-4293-ebc5-08dcea06ac45/dishes
Accept: application/json
Authorization: Bearer {{token}}

###

GET {{RestaurantsAPI_HostAddress}}/api/restaurants/3af987b0-e8ca-4293-ebc5-08dcea06ac45/dishes/c4c23fee-61d9-418d-ad02-08dcea06ac4d
Accept: application/json
Authorization: Bearer {{token}}

###

POST {{RestaurantsAPI_HostAddress}}/api/restaurants/3af987b0-e8ca-4293-ebc5-08dcea06ac45/dishes
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "Chicken Kadai",
  "description": "A spicy chicken delicacy",
  "price": 24.99,
  "kiloCalories": 520
}

###

PATCH {{RestaurantsAPI_HostAddress}}/api/restaurants/54a3718d-9cb5-48e1-81f3-c29673125bcb/dishes/
Content-Type: application/json

{
  "id": "AAFCCE92-4E96-48F8-A1C8-0C92C344241F",
  "name": "Chicken Kadai",
  "description": "Yet another disgusting indian dish with low nutritional value and high calories",
  "price": 49.99,
  "kiloCalories": 600
}

###

DELETE {{RestaurantsAPI_HostAddress}}/api/restaurants/54a3718d-9cb5-48e1-81f3-c29673125bcb/dishes/aafcce92-4e96-48f8-a1c8-0c92c344241f
Accept: application/json

###

POST {{RestaurantsAPI_HostAddress}}/api/identity/register
Content-Type: application/json

{
  "email": "owner@example.com",
  "password": "Hello@1234"
}

###

POST {{RestaurantsAPI_HostAddress}}/api/identity/login
Content-Type: application/json

{
  "email": "owner@example.com",
  "password": "Hello@1234"
}

###

PATCH {{RestaurantsAPI_HostAddress}}/api/identity/user
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "dateOfBirth": "2010-11-23",
  "nationality": "GER"
}

###

POST {{RestaurantsAPI_HostAddress}}/api/identity/userRole
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "userEmail": "owner@example.com",
  "roleName": "Owner"
}

###

DELETE {{RestaurantsAPI_HostAddress}}/api/identity/userRole
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "userEmail": "john.doe@example.com",
  "roleName": "Owner"
}